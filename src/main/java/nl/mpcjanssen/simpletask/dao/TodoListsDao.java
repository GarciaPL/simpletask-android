package nl.mpcjanssen.simpletask.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import nl.mpcjanssen.simpletask.dao.TodoLists;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "TODO_LISTS".
*/
public class TodoListsDao extends AbstractDao<TodoLists, String> {

    public static final String TABLENAME = "TODO_LISTS";

    /**
     * Properties of entity TodoLists.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property List = new Property(0, String.class, "list", true, "LIST");
    };


    public TodoListsDao(DaoConfig config) {
        super(config);
    }
    
    public TodoListsDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"TODO_LISTS\" (" + //
                "\"LIST\" TEXT PRIMARY KEY NOT NULL );"); // 0: list
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"TODO_LISTS\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, TodoLists entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getList());
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public TodoLists readEntity(Cursor cursor, int offset) {
        TodoLists entity = new TodoLists( //
            cursor.getString(offset + 0) // list
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, TodoLists entity, int offset) {
        entity.setList(cursor.getString(offset + 0));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(TodoLists entity, long rowId) {
        return entity.getList();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(TodoLists entity) {
        if(entity != null) {
            return entity.getList();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
