buildscript {

    ext.kotlin_version = '1.0.0-beta-4584'

    repositories {
        mavenCentral()
    }
    dependencies {
<<<<<<< HEAD
        classpath 'com.android.tools.build:gradle:1.2.3'
<<<<<<< HEAD
	classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
=======
        classpath "jp.leafytree.gradle:gradle-android-scala-plugin:1.4"
>>>>>>> origin/refactor
=======
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath "jp.leafytree.gradle:gradle-android-scala-plugin:1.3.2"
>>>>>>> origin/macroid
    }
}

apply plugin: 'com.android.application'
<<<<<<< HEAD
<<<<<<< HEAD
apply plugin: 'kotlin-android'
=======
apply plugin: "jp.leafytree.android-scala"
>>>>>>> origin/refactor
=======
apply plugin: "jp.leafytree.android-scala"

sourceSets {
        unitTest {
                java.srcDir file('src/test/java')
                resources.srcDir file('src/test/resources')
        }
}

dependencies {
        unitTestCompile files("$project.buildDir/intermediates/classes/cloudless/debug")
        unitTestCompile fileTree(dir: 'libskeep', include: '*.jar')
        unitTestCompile 'com.darwinsys:hirondelle-date4j:1.5.1'
        unitTestCompile 'com.google.guava:guava:18.0'
        unitTestCompile 'com.google.android:android:4.+'
        unitTestCompile 'junit:junit:4.11'
}

configurations {
        unitTestCompile.extendsFrom runtime
        unitTestRuntime.extendsFrom unitTestCompile
}

task unitTest(type:Test, dependsOn: assemble) {
        description = "run unit tests"
        testClassesDir = project.sourceSets.unitTest.output.classesDir
        classpath = project.sourceSets.unitTest.runtimeClasspath + files("$project.buildDir/intermediates/classes/cloudless/debug")
}

// Generate some build info. Used for the revision in the application settings and for generating the deployed file names.
 
task buildInfo {
    def revcmd = "git rev-parse --short HEAD"
    def revproc = revcmd.execute()
    ext.revision = revproc.text.trim()
    def datecmd = "git log -1 --date=short --pretty=format:%cd"
    def dateproc = datecmd.execute()
    ext.date = dateproc.text.trim()
    def branchcmd = 'git rev-parse --abbrev-ref HEAD'
    def branchproc = branchcmd.execute()
    ext.branch = branchproc.text.trim()
}

task checkCleanGit {
    def cmd = "git diff-files"
    def proc = cmd.execute()
    ext.status = proc.text.trim()
    doLast {
       if (!(ext.status == ""))
          throw new GradleException("Git not clean, commit changes before running serve:\n" + ext.status)
    }
}

def checkDeployPath() {
    if (hasProperty("deployPath"))
        return deployPath
    else
        return null
}

task deploy(type:Sync, dependsOn: [clean,build,checkCleanGit]) {
  doFirst {
    if (checkDeployPath()==null)
      throw new GradleException("deployPath not defined, please define it in gradle.properties")
      tasks.clean.execute()
  }
  into checkDeployPath() + '/' + buildInfo.ext.branch + '/' + buildInfo.ext.date + "-" + buildInfo.ext.revision
  from 'build/outputs/apk/'
  include '*release.apk'
  outputs.upToDateWhen { false }
}
>>>>>>> origin/macroid

// Call gradle with -Plint to enable all warnings.
if (hasProperty("lint")) {
    //noinspection GroovyAssignabilityCheck
    tasks.withType(Compile) {
      options.compilerArgs << "-Xlint:all" 
   } 
}

android {
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    buildToolsVersion "23.0.2"
    compileSdkVersion 23

    defaultConfig {
<<<<<<< HEAD
        versionName '6.2.0'
        versionCode 3001
<<<<<<< HEAD
	minSdkVersion 14
        targetSdkVersion 23
=======
        minSdkVersion 14
        targetSdkVersion 23
        multiDexEnabled true
>>>>>>> origin/refactor
=======
        versionName '5.2.15'
        versionCode 1543
	    minSdkVersion 14
        targetSdkVersion 21
        buildConfigField "String", "GIT_REV", "\"" + buildInfo.ext.revision + "\""
        // Enabling multidex support.
        multiDexEnabled true
>>>>>>> origin/macroid
    }

    productFlavors {
        dropbox {
            applicationId 'nl.mpcjanssen.todotxtholo'
        }
        cloudless {
            applicationId 'nl.mpcjanssen.simpletask'
        }
    }

    signingConfigs {
        release {
            keyAlias = "mpcjanssen.nl"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            //noinspection GroovyAssignabilityCheck
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFile 'proguard-rules.txt'
            // proguardFile getDefaultProguardFile('proguard-android.txt')
        }
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
<<<<<<< HEAD
    dropboxCompile fileTree(dir: 'libs', include: '*.jar')
<<<<<<< HEAD
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
=======
    compile 'org.scala-lang:scala-library:2.11.7'
=======
    freeCompile fileTree(dir: 'libs', include: '*.jar')
    compile fileTree(dir: 'libskeep', include: '*.jar')
    compile "org.scala-lang:scala-library:2.11.5"
    compile "org.macroid:macroid_2.11:2.0.0-M3@aar"
>>>>>>> origin/macroid
    compile 'com.intellij:annotations:12.0'
>>>>>>> origin/refactor
    compile 'com.android.support:support-v4:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.github.rjeschke:txtmark:0.11'
    compile 'com.darwinsys:hirondelle-date4j:1.5.1'
<<<<<<< HEAD
    compile 'org.luaj:luaj-jse:3.0'
    compile 'com.github.tony19:logback-android-core:1.1.1-4'
    compile 'com.github.tony19:logback-android-classic:1.1.1-4'
    compile 'org.slf4j:slf4j-api:1.7.6'
    testCompile 'junit:junit:4.12'
=======
    compile 'com.google.guava:guava:18.0'
    // Needed for multidex support on smaller than 5.0 devices
    compile 'com.android.support:multidex:1.0.0'
>>>>>>> origin/macroid
}

// Only sign if we have keystore properties in the gradle.properties in ~/.gradle
if (project.hasProperty('storeFile') &&
        project.hasProperty('storePassword') &&
        project.hasProperty('keyPassword')) {
    android.signingConfigs.release.storeFile = file(storeFile)
    android.signingConfigs.release.storePassword = storePassword
    android.signingConfigs.release.keyPassword = keyPassword
} else {
    android.buildTypes.release.signingConfig = null
}
